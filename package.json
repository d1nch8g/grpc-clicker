{
  "name": "grpc-clicker",
  "displayName": "gRPC Clicker",
  "description": "Call gRPC services directly from VSCode",
  "icon": "docs/logo.png",
  "version": "0.0.18",
  "engines": {
    "vscode": "^1.68.0"
  },
  "publisher": "Dancheg97",
  "author": {
    "name": "Dancheg97",
    "email": "dangdancheg@gmail.com",
    "url": "https://github.com/Dancheg97"
  },
  "publishConfig": {},
  "repository": "https://github.com/Dancheg97/grpclicker_vscode",
  "categories": [
    "Testing"
  ],
  "tags": [
    "grpc",
    "grpcurl",
    "tests",
    "rpc",
    "client"
  ],
  "activationEvents": [
    "onView:files",
    "onCommand:files.add",
    "onCommand:files.refresh",
    "onView:servers",
    "onCommand:servers.add",
    "onCommand:servers.refresh",
    "onView:headers",
    "onCommand:headers.add",
    "onView:history",
    "onCommand:history.clean",
    "onCommand:cache.clean",
    "onWebviewPanel:callgrpc"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "grpc-clicker",
          "title": "gRPC Clicker",
          "icon": "images/logo.svg"
        }
      ]
    },
    "views": {
      "grpc-clicker": [
        {
          "id": "files",
          "name": "Proto files"
        },
        {
          "id": "servers",
          "name": "Protoreflect servers"
        },
        {
          "id": "headers",
          "name": "Request headers"
        },
        {
          "id": "history",
          "name": "Request history"
        }
      ]
    },
    "commands": [
      {
        "category": "gRPC Clicker",
        "command": "history.clean",
        "title": "Clean history of requests",
        "icon": {
          "dark": "images/dark/trash.svg",
          "light": "images/light/trash.svg"
        }
      },
      {
        "category": "gRPC Clicker",
        "command": "cache.clean",
        "title": "Clean all extension cache",
        "icon": {
          "dark": "images/dark/trash.svg",
          "light": "images/light/trash.svg"
        }
      },
      {
        "category": "gRPC Clicker",
        "command": "headers.switch",
        "title": "Turn on/off value of context metadata"
      },
      {
        "category": "gRPC Clicker",
        "command": "files.add",
        "title": "Add new proto file",
        "icon": {
          "dark": "images/dark/plus.svg",
          "light": "images/light/plus.svg"
        }
      },
      {
        "category": "gRPC Clicker",
        "command": "servers.add",
        "title": "Add new proto reflect server",
        "icon": {
          "dark": "images/dark/plus.svg",
          "light": "images/light/plus.svg"
        }
      },
      {
        "command": "files.remove",
        "title": "Remove existing proto file",
        "icon": {
          "dark": "images/dark/trash.svg",
          "light": "images/light/trash.svg"
        }
      },
      {
        "category": "gRPC Clicker",
        "command": "headers.add",
        "title": "Add new metadata to request",
        "icon": {
          "dark": "images/dark/plus.svg",
          "light": "images/light/plus.svg"
        }
      },
      {
        "command": "headers.remove",
        "title": "Remove header",
        "icon": {
          "dark": "images/dark/trash.svg",
          "light": "images/light/trash.svg"
        }
      },
      {
        "command": "hosts.add",
        "title": "Add new host",
        "icon": {
          "dark": "images/dark/plus.svg",
          "light": "images/light/plus.svg"
        }
      },
      {
        "command": "hosts.remove",
        "title": "Remove host",
        "icon": {
          "dark": "images/dark/trash.svg",
          "light": "images/light/trash.svg"
        }
      },
      {
        "command": "servers.remove",
        "title": "Remove server",
        "icon": {
          "dark": "images/dark/trash.svg",
          "light": "images/light/trash.svg"
        }
      },
      {
        "category": "gRPC Clicker",
        "command": "files.refresh",
        "title": "Resresh existing proro schemas",
        "icon": {
          "dark": "images/dark/refresh.svg",
          "light": "images/light/refresh.svg"
        }
      },
      {
        "category": "gRPC Clicker",
        "command": "servers.refresh",
        "title": "Resresh existing proro reflect servers",
        "icon": {
          "dark": "images/dark/refresh.svg",
          "light": "images/light/refresh.svg"
        }
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "files.add",
          "when": "view == files",
          "group": "navigation"
        },
        {
          "command": "files.refresh",
          "when": "view == files",
          "group": "navigation"
        },
        {
          "command": "servers.add",
          "when": "view == servers",
          "group": "navigation"
        },
        {
          "command": "servers.refresh",
          "when": "view == servers",
          "group": "navigation"
        },
        {
          "command": "headers.add",
          "when": "view == headers",
          "group": "navigation"
        },
        {
          "command": "history.clean",
          "when": "view == history",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "headers.switch",
          "when": "viewItem == header"
        },
        {
          "command": "hosts.add",
          "when": "view == files && viewItem == hosts",
          "group": "inline"
        },
        {
          "command": "hosts.remove",
          "when": "view == files && viewItem == host",
          "group": "inline"
        },
        {
          "command": "headers.remove",
          "when": "view == headers && viewItem == header",
          "group": "inline"
        },
        {
          "command": "files.remove",
          "when": "view == files && viewItem == file",
          "group": "inline"
        },
        {
          "command": "servers.remove",
          "when": "view == files && viewItem == file",
          "group": "inline"
        }
      ]
    },
    "configuration": [
      {
        "title": "gRPC Clicker",
        "properties": {
          "grpc-clicker.msgsize": {
            "title": "Maximum message size to recieve",
            "type": "integer",
            "default": 4,
            "markdownDescription": "The maximum encoded size of a *response* message, in bytes, that grpcurl will accept. Default is `4` mb."
          },
          "grpc-clicker.plaintext": {
            "title": "Plain text",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Use plain-text `HTTP/2` when connecting to server (no TLS)."
          },
          "grpc-clicker.usedocker": {
            "title": "Use docker version of extension",
            "type": "boolean",
            "default": false,
            "markdownDescription": "Switch to use docker version of cli - `fullstorydev/grpcurl`"
          }
        }
      }
    ],
    "walkthroughs": [
      {
        "id": "grpc-clicker-walkthrow",
        "title": "Get started with gRPC inside vscode",
        "description": "Lets make some gRPC calls!",
        "steps": [
          {
            "id": "1",
            "title": "Install grpcurl",
            "description": "First - you need to have [grpcurl](https://github.com/fullstorydev/grpcurl) installed on your pc.",
            "media": {
              "image": "docs/logo.png",
              "altText": "gRPC-Clicker"
            }
          },
          {
            "id": "2",
            "title": "Open extension side panel",
            "description": "This command will reveal extension in __vscode__ activity bar",
            "media": {
              "image": "docs/1.png",
              "altText": "gRPC-Clicker"
            }
          },
          {
            "id": "3",
            "title": "Add protobuf definition",
            "description": "Chose __proto__ file in from your local files",
            "media": {
              "image": "docs/2.png",
              "altText": "gRPC-Clicker"
            }
          },
          {
            "id": "4",
            "title": "Add host for calls",
            "description": "You can add multiple and easily switch between them by clicking",
            "media": {
              "image": "docs/3.png",
              "altText": "gRPC-Clicker"
            }
          },
          {
            "id": "5",
            "title": "Add request metadata",
            "description": "This step is optional, you can add metadata to request if required. Enabled metadata is marked with blue.",
            "media": {
              "image": "docs/4.png",
              "altText": "gRPC-Clicker"
            }
          },
          {
            "id": "6",
            "title": "Click on call from in gRPC-Explorer",
            "description": "Click on the call you want to execute in proto schema explorer",
            "media": {
              "image": "docs/5.png",
              "altText": "gRPC-Clicker"
            }
          },
          {
            "id": "7",
            "title": "Edit message to send",
            "description": "Input supports only json format",
            "media": {
              "image": "docs/6.png",
              "altText": "gRPC-Clicker"
            }
          },
          {
            "id": "8",
            "title": "Execute call",
            "description": "Click on send button in view, and wait for result!",
            "media": {
              "image": "docs/7.png",
              "altText": "gRPC-Clicker"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "watch:webview": "node watcher.js",
    "serve:grpc": "go run server/main.go",
    "build": "vsce package",
    "protogen": "protoc --go_out=server/ --go-grpc_out=server/ server/api.proto",
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "cov": "jest --collectCoverage",
    "installModules": "npm i"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/jest": "^28.1.6",
    "@types/mocha": "^9.1.1",
    "@types/node": "^14.18.21",
    "@types/vscode": "^1.68.0",
    "@typescript-eslint/eslint-plugin": "^5.21.0",
    "@typescript-eslint/parser": "^5.21.0",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^8.14.0",
    "glob": "^8.0.1",
    "jest": "^28.1.3",
    "mocha": "^9.2.2",
    "ts-jest": "^28.0.7",
    "ts-loader": "^9.2.8",
    "typescript": "^4.6.4",
    "webpack": "^5.70.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "^1.0.0"
  }
}
